openapi: 3.0.3
info:
  title: INX-IRC-Metadata REST API
  description: This document specifies the REST API for the INX-IRC-Metadata extension.
  contact:
    email: contact@iota.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
externalDocs:
  description: Find out more about IOTA
  url: https://iota.org
servers:
  - url: http://127.0.0.1:14265
tags:
  - name: Metadata
    description: Loading metadata from outputs.
paths:
  /api/irc-metadata/v1/nfts/{nftId}:
    get:
      tags:
        - create
      summary: Returns the IRC27 metadata as JSON.
      description: >-
        Load the IRC27 metadata of an NFT by its id.
      parameters:
        - in: path
          name: nftId
          schema:
            type: string
          example: "0x19c82b32761fd8729a1a6c77f7c17597e4b9b01759794e52381f6a0050b0c11f"
          description: Unique identifier of the nft.
          required: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/iotaledger/tips/main/tips/TIP-0027/irc27.schema.json'
        '400':
          description: 'Unsuccessful operation: indicates that the provided data is invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '403':
          description: >-
            Unsuccessful operation: indicates that the endpoint is not available
            for public use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /api/irc-metadata/v1/tokens/{tokenId}:
    get:
      tags:
        - create
      summary: Returns the IRC30 metadata as JSON.
      description: >-
        Load the IRC30 metadata of a native token foundry by its id.
      parameters:
        - in: path
          name: tokenId
          schema:
            type: string
          example: "0x081505ec099896ab05d9e08fbc7101ae4dff0093b3943b28f789ed2ca728bcc8d60100000000"
          description: Unique identifier of the token.
          required: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/iotaledger/tips/main/tips/TIP-0030/irc30.schema.json'
        '400':
          description: 'Unsuccessful operation: indicates that the provided data is invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '403':
          description: >-
            Unsuccessful operation: indicates that the endpoint is not available
            for public use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
components:
  schemas:
    ErrorResponse:
      description: The error format.
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: The application error code.
            message:
              type: string
              description: The error reason.
          required:
            - code
            - message
      required:
        - error
    ForbiddenResponse:
      description: Indicates that this endpoint is not available for public use.
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 403
          message: not available for public use
    BadRequestResponse:
      description: Indicates that the request was bad.
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 400
          message: invalid data provided
    NotFoundResponse:
      description: Indicates that the data was not found.
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 404
          message: could not find data
    InternalErrorResponse:
      description: >-
        Indicates that the server encountered an unexpected condition, which
        prevented it from fulfilling the request by the client.
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 500
          message: internal server error
